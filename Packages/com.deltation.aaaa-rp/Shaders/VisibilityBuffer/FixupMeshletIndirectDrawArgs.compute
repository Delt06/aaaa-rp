#pragma kernel CS

#include "Packages/com.deltation.aaaa-rp/ShaderLibrary/Compute/IndirectArgs.hlsl"
#include "Packages/com.deltation.aaaa-rp/ShaderLibrary/VisibilityBuffer/Meshlets.hlsl"

ByteAddressBuffer   _RequestCounter;
RWByteAddressBuffer _IndirectArgs;

uint _MaxMeshletRenderRequestsPerList;

[numthreads(1, 1, 1)]
void CS(uint3 dispatchThreadID : SV_DispatchThreadID)
{
    const uint rendererListIndex = dispatchThreadID.x;
    const uint requestCount = _RequestCounter.Load(4 * rendererListIndex);

    IndirectDrawArgs indirectDrawArgs;
    indirectDrawArgs.startInstance = rendererListIndex * _MaxMeshletRenderRequestsPerList;
    indirectDrawArgs.instanceCount = requestCount;
    indirectDrawArgs.startVertex = 0;
    indirectDrawArgs.vertexCountPerInstance = MAX_MESHLET_INDICES;

    const uint writeOffset = rendererListIndex * IndirectArgs::IndirectDrawArgsStride();
    _IndirectArgs.Store4(writeOffset, IndirectArgs::PackIndirectDrawArgs(indirectDrawArgs));
}