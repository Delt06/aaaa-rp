#pragma multi_compile_local _ MIP_1
#pragma multi_compile_local _ USE_MAX

#include "Packages/com.deltation.aaaa-rp/Runtime/Meshlets/AAAAMeshletComputeShaders.cs.hlsl"

#define THREAD_GROUP_SIZE_X HZBGENERATION_THREAD_GROUP_SIZE_X
#define THREAD_GROUP_SIZE_Y HZBGENERATION_THREAD_GROUP_SIZE_Y

#pragma kernel CS

#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/Common.hlsl"
#include "Packages/com.deltation.aaaa-rp/ShaderLibrary/Depth.hlsl"

float2 _HZBTextureSize;
uint4  _SrcOffsetAndLimit; // {x, y, w - 1, h - 1}
uint4  _DstOffset; // {x, y, 0, 0}

#ifdef MIP_1
TYPED_TEXTURE2D(float, _CameraDepth);
#endif

RW_TEXTURE2D(float, _HZB);

#ifdef MIP_1
#define SOURCE_TEXTURE _CameraDepth
#else
#define SOURCE_TEXTURE _HZB
#endif

#ifdef USE_MAX
#define COMBINE_DEPTHS(x, y) MAX_DEPTH(x, y)
#else
#define COMBINE_DEPTHS(x, y) MIN_DEPTH(x, y)
#endif

[numthreads(THREAD_GROUP_SIZE_X, THREAD_GROUP_SIZE_Y, 1)]
void CS(uint3 dispatchThreadId : SV_DispatchThreadID)
{
    uint2 srcOffset = _SrcOffsetAndLimit.xy;
    uint2 srcLimit = _SrcOffsetAndLimit.zw;
    uint2 dstOffset = _DstOffset.xy;

    // https://github.com/Unity-Technologies/Graphics/blob/3fb000debc138e82dcd7ac069c6818c4857a78da/Packages/com.unity.render-pipelines.high-definition/Runtime/RenderPipeline/RenderPass/GenerateMaxZ.compute#L150
    // Upper-left pixel coordinate of quad that this thread will read
    const uint2 srcPixelUL = srcOffset + (dispatchThreadId.xy << 1);

    float4 depths;
    depths.x = SOURCE_TEXTURE[min(srcPixelUL + uint2(0u, 0u), srcLimit)];
    depths.y = SOURCE_TEXTURE[min(srcPixelUL + uint2(1u, 0u), srcLimit)];
    depths.z = SOURCE_TEXTURE[min(srcPixelUL + uint2(0u, 1u), srcLimit)];
    depths.w = SOURCE_TEXTURE[min(srcPixelUL + uint2(1u, 1u), srcLimit)];

    float combinedDepth = COMBINE_DEPTHS(COMBINE_DEPTHS(depths.x, depths.y), COMBINE_DEPTHS(depths.z, depths.w));

    const uint2 uavSize = (uint2)_HZBTextureSize;
    const uint2 id = dstOffset + dispatchThreadId.xy;
    if (id.x < uavSize.x && id.y < uavSize.y)
    {
        _HZB[id.xy] = combinedDepth;
    }
}