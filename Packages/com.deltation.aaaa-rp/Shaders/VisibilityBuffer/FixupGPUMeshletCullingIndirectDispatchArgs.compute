#pragma kernel CS

#include "Packages/com.deltation.aaaa-rp/Runtime/Meshlets/AAAAMeshletComputeShaders.cs.hlsl"
#include "Packages/com.deltation.aaaa-rp/ShaderLibrary/Compute/IndirectArgs.hlsl"
#include "Packages/com.deltation.aaaa-rp/ShaderLibrary/Math.hlsl"

ByteAddressBuffer   _RequestCounter;
RWByteAddressBuffer _IndirectArgs;

[numthreads(1, 1, 1)]
void CS(const uint3 groupID : SV_GroupID)
{
    const uint contextIndex = groupID.x;
    const uint requestCount = _RequestCounter.Load(contextIndex * 4);

    IndirectDispatchArgs indirectDispatchArgs;
    indirectDispatchArgs.ThreadGroupsX = (uint)AlignUp(requestCount, GPUMESHLET_CULLING_THREAD_GROUP_SIZE) / GPUMESHLET_CULLING_THREAD_GROUP_SIZE;
    indirectDispatchArgs.ThreadGroupsY = 1;
    indirectDispatchArgs.ThreadGroupsZ = 1;
    _IndirectArgs.Store3(IndirectArgs::DispatchArgsStride() * contextIndex, IndirectArgs::PackDispatchArgs(indirectDispatchArgs));
}